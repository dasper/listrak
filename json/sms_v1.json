{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "Listrak SMS REST API",
    "description": "# Introduction\r\nWelcome to the Listrak SMS <a href='https://en.wikipedia.org/wiki/Representational_state_transfer'>REST API</a>!\r\n\r\nOur API allows developers to integrate with Listrak's application. It enables the seamless automation of a broad set of functionality, ranging from basic tasks to complex processes.\r\n\r\nWe aim to provide comprehensive documentation coverage of our API's capabilities. Each resource and method is described in detail with implementation notes, descriptions of parameters, headers, return values, and code samples to aid in development.\r\n\n# Versioning\r\n\r\nThe API version is denoted in the URI. This API's base URI is:\r\n\r\n`https://api.listrak.com/sms/v1`\r\n\r\n<br />\r\n\r\nThe API version will be incremented if breaking changes are introduced. Breaking changes may include:\r\n\r\n- Addition of required headers, parameters, or model fields to a current route\r\n- Alterations that would result in currently valid requests failing, or performing unexpectedly\r\n\r\n<br />\r\n\r\nChanges that are not considered breaking may include:\r\n\r\n- Addition of new model fields\r\n- Addition of new routes\r\n- Addition of new response headers\r\n- Any alteration to a route that is marked as <span class=\"inDev\">In Development</span>\r\n# Usage\r\n\r\n## External Libraries\r\n\r\nThe C# code examples featured on this site require the following packages:\r\n\r\n- <a href=\"https://www.nuget.org/packages/Microsoft.AspNet.WebApi.Client/\">Microsoft.AspNet.WebApi.Client</a>\r\n- <a href=\"https://www.nuget.org/packages/Newtonsoft.Json/\">Newtonsoft.Json</a>\r\n\r\nThe Php code examples require the following package:\r\n- <a href=\"http://docs.guzzlephp.org/en/stable/#\">Guzzle 6</a>\n# Integration Setup\r\nTo enable API access, **you must create an _Integration_** on the _Integrations_ page. In the Listrak application on the navigation bar go to: Manage &rarr; Integrations.\r\n\r\nPlease specify integration type `SMS` for your integration.\r\n\r\nMake sure to securely store a copy of your _Client ID_ and _Client Secret_. These values will be needed to authenticate with the API. For your security, the _Client Secret_ cannot be retrieved if it is lost.\r\n\n# Status Codes\r\n\r\n| Status Code | Status | Description |\r\n|-|-|-|\r\n| 200 | OK | The request succeeded. |\r\n| 201 | Created | A new resource has been created. |\r\n| 400 | Bad Request | Your request is malformed or invalid. |\r\n| 401 | Unauthorized | Authentication is required. |\r\n| 404 | Not Found | The resource does not exist. |\r\n| 405 | Method Not Allowed | The route does not support the requested method. |\r\n| 415 | Unsupported Media Type | Please use a `Content-Type` of `application/json`. |\r\n| 500 | Internal Server Error | An unexpected error occurred. Our development team has been notified. |\r\n\n# Error Codes\r\n## General\r\n| Error Code | Possible Causes |\r\n|-|-|\r\n| ERROR_INVALID_CREDENTIALS | Invalid client credentials, inactive integration, unauthorized IP address |\r\n| ERROR_INVALID_LIST_ID | `listId` is not a `listId` that exists or the `listId` does not exist on the `shortCodeId` supplied |\r\n| ERROR_INVALID_PARAMETER | Null or invalid value for a parameter, non-unique value for a parameter (if the property is required to be unique for all resources in the collection) |\r\n| ERROR_INVALID_PHONE_NUMBER | `phoneNumber` is in an invalid format |\r\n| ERROR_LIST_INACTIVE | The list is in an inactive state based off of the `listId` provided |\r\n| ERROR_MALFORMED_REQUEST_BODY | Invalid JSON body was supplied |\r\n| ERROR_RESOURCE_DEPENDENCY | Trying to delete a resource that is in use |\r\n| ERROR_SHORT_CODE_DISABLED | The short code is in a disabled state based off of the `shortCodeId` provided |\r\n| ERROR_UNABLE_TO_LOCATE_RESOURCE | Valid route was supplied with invalid resource IDs |\r\n| ERROR_UNAUTHORIZED | Invalid access token, inactive integration, insufficient access level, unauthorized IP address |\r\n| ERROR_UNHANDLED_EXCEPTION | Unexpected error during execution of the request |\r\n| ERROR_UNKNOWN_ROUTE | Invalid route was supplied |\r\n| ERROR_UNSAFE_ROUTE | Invalid character was supplied in the route ('&' outside of query string, '<', '>', etc.) |\r\n| ERROR_UNSUPPORTED_CONTENT_TYPE | Invalid `Content-Type` header was supplied (must be `application/json`), missing `Content-Type` header |\r\n| ERROR_UNSUPPORTED_METHOD | Valid route supplied with an invalid HTTP method |\r\n| ERROR_UNSUPPORTED_PROTOCOL | Request was not made over HTTPS |\r\n\r\n## Contact\r\n| Error Code | Possible Causes |\r\n|-|-|\r\n| ERROR_BANNED_PHONE_NUMBER | `phoneNumber` is banned from short code on update, subscription, or sms send calls |\r\n| ERROR_BIRTHDAY_FIELD_NULL | `birthday` field does not have correct null value provided |\r\n| ERROR_INVALID_EMAIL_ADDRESS | `emailAddress` is in an invalid format |\r\n| ERROR_INVALID_SEGMENTATION_FIELD_ID | `segmentationFieldID` is not one that exists on the short code |\r\n| ERROR_PENDING_PHONE_NUMBER | `phoneNumber` is in pending double opt-in state on `listID` provided |\r\n| ERROR_PHONE_NUMBER_FOUND | `phoneNumber` already exists on create |\r\n| ERROR_PHONE_NUMBER_NOT_FOUND | `phoneNumber` not created before updating |\r\n| ERROR_PHONE_NUMBER_NOT_SUBSCRIBED | `phoneNumber` is not subscribed to listID provided |\r\n| ERROR_PHONE_NUMBER_SUSPENDED | `phoneNumber` has had its service temporarily suspended and cannot be sent messages |\r\n| ERROR_SEGMENTATION_FIELD_DISABLED | profile field is in a disabled or purged state |\r\n| ERROR_SEGMENTATION_MAX_LENGTH | profile field value is too big for the profile field |\r\n| ERROR_SUBSCRIBED_PHONE_NUMBER | phoneNumber already is subscribed to the `listID` provided |\r\n\r\n## Transactional Message\r\n| Error Code | Possible Causes |\r\n|-|-|\r\n| ERROR_TRANSACTIONAL_MESSAGE_CONTENT_COUPON_CODE | transactional message content cannot have coupon code tags in it |\r\n| ERROR_TRANSACTIONAL_MESSAGE_EMPTY_MESSAGE | transactional message content is empty even after filling in profile tags |\r\n| ERROR_TRANSACTIONAL_MESSAGE_NOT_FOUND | `transactionalMessageID` provided does not exist on the `listID` provided |\r\n\n# Parameters\r\n## Route Parameters\r\n\r\nResource identifiers are specified in the route. For example, in the route `/Resource/{resourceId}`, `resourceId` is a route parameter. In this example, if you wish to interact with Resource #123, its route would be `/Resource/123`.\r\n\r\n## Query Parameters\r\n\r\nSome routes support additional query parameters; for example, some resources support query parameters relating to paging. Supported query parameters are described in their respective documentation areas.\r\n\r\n## Request Body\r\n\r\nRequest bodies are required for most `POST` and `PUT` requests. Please use a `Content-Type` of `application/json` and provide a JSON object in your request body.\r\n\r\nThe maximum accepted request body size is 250 MB (262,144,000 bytes). Headers are not counted against this limit. Requests larger than this limit will result in a `404 Not Found` response.\r\n\n",
    "x-logo": {
      "url": "/SMS/Resources/Images/Logo.png"
    }
  },
  "host": "api.listrak.com",
  "basePath": "/sms",
  "schemes": [
    "https"
  ],
  "paths": {
    "/v1/ShortCode/{shortCodeId}/Broadcast/Immediate": {
      "post": {
        "tags": [
          "BroadcastMessage"
        ],
        "summary": "Immediate Broadcast",
        "description": "Immediately send an SMS broadcast message to all subscribed contacts on an SMS List. \r\nIf a segmentation field id is included, the message will only be sent to the contacts that have the custom checkbox field checked.\r\nThe provided title will be used for reporting purposes to identify a particular SMS broadcast message.",
        "operationId": "BroadcastMessage_PostImmediateBroadcast",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shortCodeId",
            "in": "path",
            "description": "Identifier used to specify the Short Code.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "broadcastMessage",
            "in": "body",
            "description": "Message object information needed to initiate the immediate SMS broadcast message.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BroadcastMessage"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 400,
                "error": "ERROR_INVALID_PARAMETER",
                "message": "An invalid value was supplied for {Parameter}."
              }
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResourceCreated"
            },
            "examples": {
              "application/json": {
                "status": 201,
                "resourceId": "{ResourceId}"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 401,
                "error": "ERROR_UNAUTHORIZED",
                "message": "Authorization was denied for this request."
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 404,
                "error": "ERROR_UNABLE_TO_LOCATE_RESOURCE",
                "message": "Unable to locate a resource associated with the shortCodeId supplied."
              }
            }
          }
        },
        "security": [
          {
            "OAuth 2": []
          }
        ],
        "x-code-samples": [
          {
            "lang": "C#",
            "source": "var client = new HttpClient();\r\n\r\nclient.BaseAddress = new Uri(\"/\");\nclient.DefaultRequestHeaders.Add(\"Authorization\", \"Bearer \" + token);\r\n\r\nvar response = await client.PostAsJsonAsync(\"v1/ShortCode/{shortCodeId}/Broadcast/Immediate\", new\n{\r\n   PhoneListId = 0,\r\n   MessageContent =   ,\r\n   MessageTitle =   ,\r\n   SegmentationFieldId = null\r\n});\n"
          },
          {
            "lang": "PHP",
            "source": "$client = new \\GuzzleHttp\\Client([\r\n\t'base_uri' => '/'\n]);\r\n\r\n$res = $client->request('POST', 'v1/ShortCode/{shortCodeId}/Broadcast/Immediate',  [\r\n\t'headers' => ['Authorization' => 'Bearer ' . $accessToken],\r\n\t'body' => $jsonBody\r\n]);\n"
          }
        ]
      }
    },
    "/v1/ShortCode/{shortCodeId}/PhoneList/{phoneListId}/Contact": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Get Contact Collection",
        "description": "Returns all contacts that exist on a specific SMS list by optout status.",
        "operationId": "Contact_GetContactCollection",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shortCodeId",
            "in": "path",
            "description": "Identifier used to specify the Short Code.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "phoneListId",
            "in": "path",
            "description": "Identifier used to locate the SMS List.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "optedOut",
            "in": "query",
            "description": "Determines the status of contacts on the resulting data. The default value is `false`.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Value indicating the page of data that's being retrieved. The default value is `Start`.",
            "required": false,
            "type": "string"
          },
          {
            "name": "count",
            "in": "query",
            "description": "Number of data members to be displayed per page. The default value is `1000` and the maximum value is `5000`.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Collection[SMSContact]"
            },
            "examples": {
              "application/json": {
                "status": 200,
                "data": [
                  {
                    "phoneNumber": null,
                    "emailAddress": null,
                    "firstName": null,
                    "lastName": null,
                    "birthday": null,
                    "postalCode": null,
                    "optedOut": false,
                    "segmentationFieldValues": null
                  }
                ]
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 400,
                "error": "ERROR_INVALID_PARAMETER",
                "message": "An invalid value was supplied for {Parameter}."
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 404,
                "error": "ERROR_UNABLE_TO_LOCATE_RESOURCE",
                "message": "Unable to locate a resource associated with the shortCodeId and phoneListId supplied."
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 401,
                "error": "ERROR_UNAUTHORIZED",
                "message": "Authorization was denied for this request."
              }
            }
          }
        },
        "security": [
          {
            "OAuth 2": []
          }
        ],
        "x-code-samples": [
          {
            "lang": "C#",
            "source": "var client = new HttpClient();\r\n\r\nclient.BaseAddress = new Uri(\"/\");\nclient.DefaultRequestHeaders.Add(\"Authorization\", \"Bearer \" + token);\r\n\r\nvar response = await client.GetAsync(\"v1/ShortCode/{shortCodeId}/PhoneList/{phoneListId}/Contact\");\n"
          },
          {
            "lang": "PHP",
            "source": "$client = new \\GuzzleHttp\\Client([\r\n\t'base_uri' => '/'\n]);\r\n\r\n$res = $client->request('GET', 'v1/ShortCode/{shortCodeId}/PhoneList/{phoneListId}/Contact',  [\r\n\t'headers' => ['Authorization' => 'Bearer ' . $accessToken]\r\n]);\n"
          }
        ]
      },
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Create Contact",
        "description": "Creates and subscribes a new contact for a phone number if the contact does not already exist on the short code.\r\nThis call will create a record of the contact as well as subscribe the contact to the list that was passed in the route.\r\nChanges to segmentation fields apply to the contact across all short codes.",
        "operationId": "Contact_PostContactListResource",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shortCodeId",
            "in": "path",
            "description": "Identifier used to specify the Short Code.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "phoneListId",
            "in": "path",
            "description": "Identifier for the SMS List that the contact will be created on.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "contactResource",
            "in": "body",
            "description": "Contact object containing information for creation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SMSContact"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 400,
                "error": "ERROR_INVALID_PARAMETER",
                "message": "An invalid value was supplied for {Parameter}."
              }
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResourceCreated"
            },
            "examples": {
              "application/json": {
                "status": 201,
                "resourceId": "{ResourceId}"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 401,
                "error": "ERROR_UNAUTHORIZED",
                "message": "Authorization was denied for this request."
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 404,
                "error": "ERROR_UNABLE_TO_LOCATE_RESOURCE",
                "message": "Unable to locate a resource associated with the shortCodeId and phoneListId supplied."
              }
            }
          }
        },
        "security": [
          {
            "OAuth 2": []
          }
        ],
        "x-code-samples": [
          {
            "lang": "C#",
            "source": "var client = new HttpClient();\r\n\r\nclient.BaseAddress = new Uri(\"/\");\nclient.DefaultRequestHeaders.Add(\"Authorization\", \"Bearer \" + token);\r\n\r\nvar response = await client.PostAsJsonAsync(\"v1/ShortCode/{shortCodeId}/PhoneList/{phoneListId}/Contact\", new\n{\r\n   PhoneNumber = null,\r\n   EmailAddress = null,\r\n   FirstName = null,\r\n   LastName = null,\r\n   Birthday = null,\r\n   PostalCode = null,\r\n   OptedOut = false,\r\n   SegmentationFieldValues = null\r\n});\n"
          },
          {
            "lang": "PHP",
            "source": "$client = new \\GuzzleHttp\\Client([\r\n\t'base_uri' => '/'\n]);\r\n\r\n$res = $client->request('POST', 'v1/ShortCode/{shortCodeId}/PhoneList/{phoneListId}/Contact',  [\r\n\t'headers' => ['Authorization' => 'Bearer ' . $accessToken],\r\n\t'body' => $jsonBody\r\n]);\n"
          }
        ]
      }
    },
    "/v1/ShortCode/{shortCodeId}/Contact/{phoneNumber}": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Get Contact",
        "description": "Returns a contact for a phone number. The response does not include a list id. This call will only return the system and custom profile fields for a contact along with the opted out status.",
        "operationId": "Contact_GetContactResource",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shortCodeId",
            "in": "path",
            "description": "Identifier used to specify the Short Code.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "phoneNumber",
            "in": "path",
            "description": "Phone number for contact.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Resource[SMSContactSubscriptionDetails]"
            },
            "examples": {
              "application/json": {
                "status": 200,
                "data": {
                  "subscribeDate": null,
                  "unsubscribeDate": null,
                  "phoneNumber": null,
                  "emailAddress": null,
                  "firstName": null,
                  "lastName": null,
                  "birthday": null,
                  "postalCode": null,
                  "optedOut": false,
                  "segmentationFieldValues": null
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 400,
                "error": "ERROR_INVALID_PARAMETER",
                "message": "An invalid value was supplied for {Parameter}."
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 404,
                "error": "ERROR_UNABLE_TO_LOCATE_RESOURCE",
                "message": "Unable to locate a resource associated with the shortCodeId and phoneNumber supplied."
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 401,
                "error": "ERROR_UNAUTHORIZED",
                "message": "Authorization was denied for this request."
              }
            }
          }
        },
        "security": [
          {
            "OAuth 2": []
          }
        ],
        "x-code-samples": [
          {
            "lang": "C#",
            "source": "var client = new HttpClient();\r\n\r\nclient.BaseAddress = new Uri(\"/\");\nclient.DefaultRequestHeaders.Add(\"Authorization\", \"Bearer \" + token);\r\n\r\nvar response = await client.GetAsync(\"v1/ShortCode/{shortCodeId}/Contact/{phoneNumber}\");\n"
          },
          {
            "lang": "PHP",
            "source": "$client = new \\GuzzleHttp\\Client([\r\n\t'base_uri' => '/'\n]);\r\n\r\n$res = $client->request('GET', 'v1/ShortCode/{shortCodeId}/Contact/{phoneNumber}',  [\r\n\t'headers' => ['Authorization' => 'Bearer ' . $accessToken]\r\n]);\n"
          }
        ]
      }
    },
    "/v1/ShortCode/{shortCodeId}/Contact": {
      "put": {
        "tags": [
          "Contact"
        ],
        "summary": "Update Contact",
        "description": "Updates a contact's information for a phone number. \r\nThis call will update the system fields, custom profile fields, and the opt-out status of a contact.\r\nIt is only possible to opt out a contact using this call; not opting them in to the short code. \r\nIf a contact is opted out, it is still possible to update the contacts system and custom profile fields.\r\nChanges to segmentation fields apply to the contact across all short codes.",
        "operationId": "Contact_PutContactResource",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shortCodeId",
            "in": "path",
            "description": "Identifier used to specify the Short Code.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "contactResource",
            "in": "body",
            "description": "Contact object containing information for update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SMSContact"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceUpdated"
            },
            "examples": {
              "application/json": {
                "status": 200,
                "resourceId": "{ResourceId}"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 400,
                "error": "ERROR_INVALID_PARAMETER",
                "message": "An invalid value was supplied for {Parameter}."
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 404,
                "error": "ERROR_UNABLE_TO_LOCATE_RESOURCE",
                "message": "Unable to locate a resource associated with the shortCodeId supplied."
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 401,
                "error": "ERROR_UNAUTHORIZED",
                "message": "Authorization was denied for this request."
              }
            }
          }
        },
        "security": [
          {
            "OAuth 2": []
          }
        ],
        "x-code-samples": [
          {
            "lang": "C#",
            "source": "var client = new HttpClient();\r\n\r\nclient.BaseAddress = new Uri(\"/\");\nclient.DefaultRequestHeaders.Add(\"Authorization\", \"Bearer \" + token);\r\n\r\nvar response = await client.PutAsJsonAsync(\"v1/ShortCode/{shortCodeId}/Contact\", new\n{\r\n   PhoneNumber = null,\r\n   EmailAddress = null,\r\n   FirstName = null,\r\n   LastName = null,\r\n   Birthday = null,\r\n   PostalCode = null,\r\n   OptedOut = false,\r\n   SegmentationFieldValues = null\r\n});\n"
          },
          {
            "lang": "PHP",
            "source": "$client = new \\GuzzleHttp\\Client([\r\n\t'base_uri' => '/'\n]);\r\n\r\n$res = $client->request('PUT', 'v1/ShortCode/{shortCodeId}/Contact',  [\r\n\t'headers' => ['Authorization' => 'Bearer ' . $accessToken],\r\n\t'body' => $jsonBody\r\n]);\n"
          }
        ]
      }
    },
    "/v1/ShortCode/{shortCodeId}/Contact/{phoneNumber}/PhoneList": {
      "get": {
        "tags": [
          "ContactListSubscription"
        ],
        "summary": "Get Contact List Collection",
        "description": "Retrieve a collection of SMS Lists that a contact belongs to along with subscription status.",
        "operationId": "ContactListSubscription_GetContactListCollection",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shortCodeId",
            "in": "path",
            "description": "Identifier used to specify the Short Code.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "phoneNumber",
            "in": "path",
            "description": "Phone number to idenify contact to retrieve data.",
            "required": true,
            "type": "string"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Value indicating the page of data that's being retrieved. The default value is `Start`.",
            "required": false,
            "type": "string"
          },
          {
            "name": "count",
            "in": "query",
            "description": "Number of data members to be displayed per page. The default value is `1000` and the maximum value is `5000`.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Collection[ContactListSubscription]"
            },
            "examples": {
              "application/json": {
                "status": 200,
                "nextPageCursor": null,
                "data": [
                  {
                    "phoneListId": 0,
                    "subscriptionState": null,
                    "subscribeDate": "0001-01-01T00:00:00"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 400,
                "error": "ERROR_INVALID_PARAMETER",
                "message": "An invalid value was supplied for {Parameter}."
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 404,
                "error": "ERROR_UNABLE_TO_LOCATE_RESOURCE",
                "message": "Unable to locate a resource associated with the shortCodeId and phoneNumber supplied."
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 401,
                "error": "ERROR_UNAUTHORIZED",
                "message": "Authorization was denied for this request."
              }
            }
          }
        },
        "security": [
          {
            "OAuth 2": []
          }
        ],
        "x-code-samples": [
          {
            "lang": "C#",
            "source": "var client = new HttpClient();\r\n\r\nclient.BaseAddress = new Uri(\"/\");\nclient.DefaultRequestHeaders.Add(\"Authorization\", \"Bearer \" + token);\r\n\r\nvar response = await client.GetAsync(\"v1/ShortCode/{shortCodeId}/Contact/{phoneNumber}/PhoneList\");\n"
          },
          {
            "lang": "PHP",
            "source": "$client = new \\GuzzleHttp\\Client([\r\n\t'base_uri' => '/'\n]);\r\n\r\n$res = $client->request('GET', 'v1/ShortCode/{shortCodeId}/Contact/{phoneNumber}/PhoneList',  [\r\n\t'headers' => ['Authorization' => 'Bearer ' . $accessToken]\r\n]);\n"
          }
        ]
      }
    },
    "/v1/ShortCode/{shortCodeId}/Contact/{phoneNumber}/PhoneList/{phoneListId}": {
      "post": {
        "tags": [
          "ContactListSubscription"
        ],
        "summary": "Subscribe Contact",
        "description": "Subscribes a contact to an SMS list. This will only subscribe contacts that already exist on the short code. If the contact does not already exist on the short code, please use the Create Contact call to create and subscribe the contact.",
        "operationId": "ContactListSubscription_PostContactListSubscription",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shortCodeId",
            "in": "path",
            "description": "Identifier used to specify the Short Code.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "phoneNumber",
            "in": "path",
            "description": "Phone number to identify contact to subscribe.",
            "required": true,
            "type": "string"
          },
          {
            "name": "phoneListId",
            "in": "path",
            "description": "Identifier to determine which SMS List to subscribe contact.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 400,
                "error": "ERROR_INVALID_PARAMETER",
                "message": "An invalid value was supplied for {Parameter}."
              }
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResourceCreated"
            },
            "examples": {
              "application/json": {
                "status": 201,
                "resourceId": "{ResourceId}"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 401,
                "error": "ERROR_UNAUTHORIZED",
                "message": "Authorization was denied for this request."
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 404,
                "error": "ERROR_UNABLE_TO_LOCATE_RESOURCE",
                "message": "Unable to locate a resource associated with the shortCodeId, phoneNumber, and phoneListId supplied."
              }
            }
          }
        },
        "security": [
          {
            "OAuth 2": []
          }
        ],
        "x-code-samples": [
          {
            "lang": "C#",
            "source": "var client = new HttpClient();\r\n\r\nclient.BaseAddress = new Uri(\"/\");\nclient.DefaultRequestHeaders.Add(\"Authorization\", \"Bearer \" + token);\r\n\r\nvar response = await client.PostAsJsonAsync(\"v1/ShortCode/{shortCodeId}/Contact/{phoneNumber}/PhoneList/{phoneListId}\", new\n);\n"
          },
          {
            "lang": "PHP",
            "source": "$client = new \\GuzzleHttp\\Client([\r\n\t'base_uri' => '/'\n]);\r\n\r\n$res = $client->request('POST', 'v1/ShortCode/{shortCodeId}/Contact/{phoneNumber}/PhoneList/{phoneListId}',  [\r\n\t'headers' => ['Authorization' => 'Bearer ' . $accessToken],\r\n\t'body' => $jsonBody\r\n]);\n"
          }
        ]
      }
    },
    "/v1/ShortCode/{shortCodeId}/ContactUnsubscribe/{phoneNumber}/PhoneList/{phoneListId}": {
      "delete": {
        "tags": [
          "ContactListSubscription"
        ],
        "summary": "Unsubscribe Contact",
        "description": "Unsubscribes a contact from an SMS List. This will only unsubscribe contacts that already exist on the Short Code, and exist on the SMS List.",
        "operationId": "ContactListSubscription_DeleteUnsubscribeContactListSubscription",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shortCodeId",
            "in": "path",
            "description": "Identifier used to specify the Short Code.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "phoneNumber",
            "in": "path",
            "description": "Phone number to identify contact to unsubscribe.",
            "required": true,
            "type": "string"
          },
          {
            "name": "phoneListId",
            "in": "path",
            "description": "Identifier to determine which SMS List to unsubscribe contact.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceDeleted"
            },
            "examples": {
              "application/json": {
                "status": 200
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 400,
                "error": "ERROR_INVALID_PARAMETER",
                "message": "An invalid value was supplied for {Parameter}."
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 404,
                "error": "ERROR_UNABLE_TO_LOCATE_RESOURCE",
                "message": "Unable to locate a resource associated with the shortCodeId, phoneNumber, and phoneListId supplied."
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 401,
                "error": "ERROR_UNAUTHORIZED",
                "message": "Authorization was denied for this request."
              }
            }
          }
        },
        "security": [
          {
            "OAuth 2": []
          }
        ],
        "x-code-samples": [
          {
            "lang": "C#",
            "source": "var client = new HttpClient();\r\n\r\nclient.BaseAddress = new Uri(\"/\");\nclient.DefaultRequestHeaders.Add(\"Authorization\", \"Bearer \" + token);\r\n\r\nvar response = await client.DeleteAsync(\"v1/ShortCode/{shortCodeId}/ContactUnsubscribe/{phoneNumber}/PhoneList/{phoneListId}\");\n"
          },
          {
            "lang": "PHP",
            "source": "$client = new \\GuzzleHttp\\Client([\r\n\t'base_uri' => '/'\n]);\r\n\r\n$res = $client->request('DELETE', 'v1/ShortCode/{shortCodeId}/ContactUnsubscribe/{phoneNumber}/PhoneList/{phoneListId}',  [\r\n\t'headers' => ['Authorization' => 'Bearer ' . $accessToken]\r\n]);\n"
          }
        ]
      }
    },
    "/v1/ShortCode/{shortCodeId}/PhoneList": {
      "get": {
        "tags": [
          "PhoneList"
        ],
        "summary": "Get collection of SMS Lists",
        "description": "Retrieve a collection of SMS Lists for a shortcode by list status.",
        "operationId": "PhoneList_GetListCollection",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shortCodeId",
            "in": "path",
            "description": "Identifier used to specify the Short Code.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Status of list types to retrieve.  The default value is `active`.  Options are `active` or `inactive`",
            "required": false,
            "type": "string"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Value indicating the page of data that's being retrieved. The default value is `Start`.",
            "required": false,
            "type": "string"
          },
          {
            "name": "count",
            "in": "query",
            "description": "Number of data members to be displayed per page. The default value is `1000` and the maximum value is `5000`.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Collection[PhoneList]"
            },
            "examples": {
              "application/json": {
                "status": 200,
                "nextPageCursor": null,
                "data": [
                  {
                    "phoneListId": 0,
                    "phoneListName": null,
                    "createDate": "0001-01-01T00:00:00",
                    "status": null,
                    "smsListType": null,
                    "messageLimit": 0,
                    "messageLimitTimeFrame": null,
                    "requireDoubleOptIn": false
                  }
                ]
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 400,
                "error": "ERROR_INVALID_PARAMETER",
                "message": "An invalid value was supplied for {Parameter}."
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 404,
                "error": "ERROR_UNABLE_TO_LOCATE_RESOURCE",
                "message": "Unable to locate a resource associated with the shortCodeId supplied."
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 401,
                "error": "ERROR_UNAUTHORIZED",
                "message": "Authorization was denied for this request."
              }
            }
          }
        },
        "security": [
          {
            "OAuth 2": []
          }
        ],
        "x-code-samples": [
          {
            "lang": "C#",
            "source": "var client = new HttpClient();\r\n\r\nclient.BaseAddress = new Uri(\"/\");\nclient.DefaultRequestHeaders.Add(\"Authorization\", \"Bearer \" + token);\r\n\r\nvar response = await client.GetAsync(\"v1/ShortCode/{shortCodeId}/PhoneList\");\n"
          },
          {
            "lang": "PHP",
            "source": "$client = new \\GuzzleHttp\\Client([\r\n\t'base_uri' => '/'\n]);\r\n\r\n$res = $client->request('GET', 'v1/ShortCode/{shortCodeId}/PhoneList',  [\r\n\t'headers' => ['Authorization' => 'Bearer ' . $accessToken]\r\n]);\n"
          }
        ]
      }
    },
    "/v1/ShortCode/{shortCodeId}/PhoneList/{phoneListId}": {
      "get": {
        "tags": [
          "PhoneList"
        ],
        "summary": "Get SMS List",
        "description": "Retrieve a single SMS List by List Id.",
        "operationId": "PhoneList_GetListResource",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shortCodeId",
            "in": "path",
            "description": "Identifier used to specify the Short Code.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "phoneListId",
            "in": "path",
            "description": "Identifier used to specify SMS List.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PhoneList"
            },
            "examples": {
              "application/json": {
                "status": 200,
                "data": [
                  {
                    "phoneListId": 0,
                    "phoneListName": null,
                    "createDate": "0001-01-01T00:00:00",
                    "status": null,
                    "smsListType": null,
                    "messageLimit": 0,
                    "messageLimitTimeFrame": null,
                    "requireDoubleOptIn": false
                  }
                ]
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 400,
                "error": "ERROR_INVALID_PARAMETER",
                "message": "An invalid value was supplied for {Parameter}."
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 404,
                "error": "ERROR_UNABLE_TO_LOCATE_RESOURCE",
                "message": "Unable to locate a resource associated with the shortCodeId and phoneListId supplied."
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 401,
                "error": "ERROR_UNAUTHORIZED",
                "message": "Authorization was denied for this request."
              }
            }
          }
        },
        "security": [
          {
            "OAuth 2": []
          }
        ],
        "x-code-samples": [
          {
            "lang": "C#",
            "source": "var client = new HttpClient();\r\n\r\nclient.BaseAddress = new Uri(\"/\");\nclient.DefaultRequestHeaders.Add(\"Authorization\", \"Bearer \" + token);\r\n\r\nvar response = await client.GetAsync(\"v1/ShortCode/{shortCodeId}/PhoneList/{phoneListId}\");\n"
          },
          {
            "lang": "PHP",
            "source": "$client = new \\GuzzleHttp\\Client([\r\n\t'base_uri' => '/'\n]);\r\n\r\n$res = $client->request('GET', 'v1/ShortCode/{shortCodeId}/PhoneList/{phoneListId}',  [\r\n\t'headers' => ['Authorization' => 'Bearer ' . $accessToken]\r\n]);\n"
          }
        ]
      }
    },
    "/v1/ShortCode/{shortCodeId}/SegmentationField/{segmentationFieldId}": {
      "get": {
        "tags": [
          "Segmentation"
        ],
        "summary": "Get a Profile Field",
        "description": "Returns the specified profile field.",
        "operationId": "Segmentation_GetPhoneAttribute",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shortCodeId",
            "in": "path",
            "description": "Identifier used to specify the Short Code.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "segmentationFieldId",
            "in": "path",
            "description": "Identifier used to locate the profile field.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Resource[PhoneAttribute]"
            },
            "examples": {
              "application/json": {
                "status": 200,
                "data": {
                  "segmentationFieldId": 0,
                  "segmentationFieldName": null,
                  "dataType": null,
                  "maxLength": null,
                  "statusFlag": null
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 400,
                "error": "ERROR_INVALID_PARAMETER",
                "message": "An invalid value was supplied for {Parameter}."
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 404,
                "error": "ERROR_UNABLE_TO_LOCATE_RESOURCE",
                "message": "Unable to locate a resource associated with the shortCodeId and segmentationFieldId supplied."
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 401,
                "error": "ERROR_UNAUTHORIZED",
                "message": "Authorization was denied for this request."
              }
            }
          }
        },
        "security": [
          {
            "OAuth 2": []
          }
        ],
        "x-code-samples": [
          {
            "lang": "C#",
            "source": "var client = new HttpClient();\r\n\r\nclient.BaseAddress = new Uri(\"/\");\nclient.DefaultRequestHeaders.Add(\"Authorization\", \"Bearer \" + token);\r\n\r\nvar response = await client.GetAsync(\"v1/ShortCode/{shortCodeId}/SegmentationField/{segmentationFieldId}\");\n"
          },
          {
            "lang": "PHP",
            "source": "$client = new \\GuzzleHttp\\Client([\r\n\t'base_uri' => '/'\n]);\r\n\r\n$res = $client->request('GET', 'v1/ShortCode/{shortCodeId}/SegmentationField/{segmentationFieldId}',  [\r\n\t'headers' => ['Authorization' => 'Bearer ' . $accessToken]\r\n]);\n"
          }
        ]
      }
    },
    "/v1/ShortCode/{shortCodeId}/SegmentationField": {
      "get": {
        "tags": [
          "Segmentation"
        ],
        "summary": "Get all Profile Fields",
        "description": "Returns the collection of profile fields that exist for the company associated with the specified Short Code.",
        "operationId": "Segmentation_GetPhoneAttributeCollection",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shortCodeId",
            "in": "path",
            "description": "Identifier used to specify the Short Code.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Collection[PhoneAttribute]"
            },
            "examples": {
              "application/json": {
                "status": 200,
                "data": [
                  {
                    "segmentationFieldId": 0,
                    "segmentationFieldName": null,
                    "dataType": null,
                    "maxLength": null,
                    "statusFlag": null
                  }
                ]
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 400,
                "error": "ERROR_INVALID_PARAMETER",
                "message": "An invalid value was supplied for {Parameter}."
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 404,
                "error": "ERROR_UNABLE_TO_LOCATE_RESOURCE",
                "message": "Unable to locate a resource associated with the shortCodeId supplied."
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 401,
                "error": "ERROR_UNAUTHORIZED",
                "message": "Authorization was denied for this request."
              }
            }
          }
        },
        "security": [
          {
            "OAuth 2": []
          }
        ],
        "x-code-samples": [
          {
            "lang": "C#",
            "source": "var client = new HttpClient();\r\n\r\nclient.BaseAddress = new Uri(\"/\");\nclient.DefaultRequestHeaders.Add(\"Authorization\", \"Bearer \" + token);\r\n\r\nvar response = await client.GetAsync(\"v1/ShortCode/{shortCodeId}/SegmentationField\");\n"
          },
          {
            "lang": "PHP",
            "source": "$client = new \\GuzzleHttp\\Client([\r\n\t'base_uri' => '/'\n]);\r\n\r\n$res = $client->request('GET', 'v1/ShortCode/{shortCodeId}/SegmentationField',  [\r\n\t'headers' => ['Authorization' => 'Bearer ' . $accessToken]\r\n]);\n"
          }
        ]
      }
    },
    "/v1/ShortCode": {
      "get": {
        "tags": [
          "ShortCode"
        ],
        "summary": "Get SMS Short Codes",
        "description": "Retrieve a collection of Short Code objects for a Company.",
        "operationId": "ShortCode_GetShortCodeCollection",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Collection[ShortCode]"
            },
            "examples": {
              "application/json": {
                "status": 200,
                "nextPageCursor": null,
                "data": [
                  {
                    "shortCodeId": 0,
                    "code": null,
                    "country": null,
                    "merchantName": null,
                    "emailListId": 0,
                    "emailListName": null,
                    "externalEventId": 0,
                    "externalEventName": null,
                    "phoneNumberSegmentationFieldGroupId": 0,
                    "phoneNumberSegmentationFieldGroupName": null,
                    "phoneNumberSegmentationFieldId": 0,
                    "phoneNumberSegmentationFieldName": null,
                    "acquisitionSourceSegmentationFieldGroupId": 0,
                    "acquisitionSourceSegmentationFieldGroupName": null,
                    "acquisitionSourceSegmentationFieldId": 0,
                    "acquisitionSourceSegmentationFieldName": null
                  }
                ]
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 400,
                "error": "ERROR_INVALID_PARAMETER",
                "message": "An invalid value was supplied for {Parameter}."
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 401,
                "error": "ERROR_UNAUTHORIZED",
                "message": "Authorization was denied for this request."
              }
            }
          }
        },
        "security": [
          {
            "OAuth 2": []
          }
        ],
        "x-code-samples": [
          {
            "lang": "C#",
            "source": "var client = new HttpClient();\r\n\r\nclient.BaseAddress = new Uri(\"/\");\nclient.DefaultRequestHeaders.Add(\"Authorization\", \"Bearer \" + token);\r\n\r\nvar response = await client.GetAsync(\"v1/ShortCode\");\n"
          },
          {
            "lang": "PHP",
            "source": "$client = new \\GuzzleHttp\\Client([\r\n\t'base_uri' => '/'\n]);\r\n\r\n$res = $client->request('GET', 'v1/ShortCode',  [\r\n\t'headers' => ['Authorization' => 'Bearer ' . $accessToken]\r\n]);\n"
          }
        ]
      }
    },
    "/v1/ShortCode/{shortCodeId}": {
      "get": {
        "tags": [
          "ShortCode"
        ],
        "summary": "Get SMS Short Code",
        "description": "Retrieve a single SMS Short Code by Short Code Id.",
        "operationId": "ShortCode_GetShortCodeResource",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shortCodeId",
            "in": "path",
            "description": "Identifier used to specify the Short Code.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Resource[ShortCode]"
            },
            "examples": {
              "application/json": {
                "status": 200,
                "data": {
                  "shortCodeId": 0,
                  "code": null,
                  "country": null,
                  "merchantName": null,
                  "emailListId": 0,
                  "emailListName": null,
                  "externalEventId": 0,
                  "externalEventName": null,
                  "phoneNumberSegmentationFieldGroupId": 0,
                  "phoneNumberSegmentationFieldGroupName": null,
                  "phoneNumberSegmentationFieldId": 0,
                  "phoneNumberSegmentationFieldName": null,
                  "acquisitionSourceSegmentationFieldGroupId": 0,
                  "acquisitionSourceSegmentationFieldGroupName": null,
                  "acquisitionSourceSegmentationFieldId": 0,
                  "acquisitionSourceSegmentationFieldName": null
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 400,
                "error": "ERROR_INVALID_PARAMETER",
                "message": "An invalid value was supplied for {Parameter}."
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 404,
                "error": "ERROR_UNABLE_TO_LOCATE_RESOURCE",
                "message": "Unable to locate a resource associated with the shortCodeId supplied."
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 401,
                "error": "ERROR_UNAUTHORIZED",
                "message": "Authorization was denied for this request."
              }
            }
          }
        },
        "security": [
          {
            "OAuth 2": []
          }
        ],
        "x-code-samples": [
          {
            "lang": "C#",
            "source": "var client = new HttpClient();\r\n\r\nclient.BaseAddress = new Uri(\"/\");\nclient.DefaultRequestHeaders.Add(\"Authorization\", \"Bearer \" + token);\r\n\r\nvar response = await client.GetAsync(\"v1/ShortCode/{shortCodeId}\");\n"
          },
          {
            "lang": "PHP",
            "source": "$client = new \\GuzzleHttp\\Client([\r\n\t'base_uri' => '/'\n]);\r\n\r\n$res = $client->request('GET', 'v1/ShortCode/{shortCodeId}',  [\r\n\t'headers' => ['Authorization' => 'Bearer ' . $accessToken]\r\n]);\n"
          }
        ]
      }
    },
    "/v1/ShortCode/{shortCodeId}/PhoneList/{phoneListId}/TransactionalMessage": {
      "get": {
        "tags": [
          "TransactionalMessage"
        ],
        "summary": "Get Transactional Messages",
        "description": "Retrieve a Collection of Transactional SMS Message for an SMS List.",
        "operationId": "TransactionalMessage_GetTransactionalMessageCollection",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shortCodeId",
            "in": "path",
            "description": "Identifier used to specify the Short Code.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "phoneListId",
            "in": "path",
            "description": "Identifier used to specify the SMS List.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Collection[TransactionalMessage]"
            },
            "examples": {
              "application/json": {
                "status": 200,
                "nextPageCursor": null,
                "data": [
                  {
                    "transactionalMessageId": 0,
                    "transactionalMessageName": null,
                    "transactionalMessageStatus": null
                  }
                ]
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 400,
                "error": "ERROR_INVALID_PARAMETER",
                "message": "An invalid value was supplied for {Parameter}."
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 404,
                "error": "ERROR_UNABLE_TO_LOCATE_RESOURCE",
                "message": "Unable to locate a resource associated with the shortCodeId and phoneListId supplied."
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 401,
                "error": "ERROR_UNAUTHORIZED",
                "message": "Authorization was denied for this request."
              }
            }
          }
        },
        "security": [
          {
            "OAuth 2": []
          }
        ],
        "x-code-samples": [
          {
            "lang": "C#",
            "source": "var client = new HttpClient();\r\n\r\nclient.BaseAddress = new Uri(\"/\");\nclient.DefaultRequestHeaders.Add(\"Authorization\", \"Bearer \" + token);\r\n\r\nvar response = await client.GetAsync(\"v1/ShortCode/{shortCodeId}/PhoneList/{phoneListId}/TransactionalMessage\");\n"
          },
          {
            "lang": "PHP",
            "source": "$client = new \\GuzzleHttp\\Client([\r\n\t'base_uri' => '/'\n]);\r\n\r\n$res = $client->request('GET', 'v1/ShortCode/{shortCodeId}/PhoneList/{phoneListId}/TransactionalMessage',  [\r\n\t'headers' => ['Authorization' => 'Bearer ' . $accessToken]\r\n]);\n"
          }
        ]
      }
    },
    "/v1/ShortCode/{shortCodeId}/PhoneList/{phoneListId}/TransactionalMessage/{transactionalMessageId}": {
      "get": {
        "tags": [
          "TransactionalMessage"
        ],
        "summary": "Get Transactional Message",
        "description": "Retrieve a single Transactional SMS Message for an SMS List by Id.",
        "operationId": "TransactionalMessage_GetTransactionalMessageResource",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shortCodeId",
            "in": "path",
            "description": "Identifier used to specify the Short Code.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "phoneListId",
            "in": "path",
            "description": "Identifier used to specify the SMS List.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "transactionalMessageId",
            "in": "path",
            "description": "Identifier used to specify the Tranactional SMS Message.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TransactionalMessage"
            },
            "examples": {
              "application/json": {
                "status": 200,
                "data": {
                  "transactionalMessageId": 0,
                  "transactionalMessageName": null,
                  "transactionalMessageStatus": null
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 400,
                "error": "ERROR_INVALID_PARAMETER",
                "message": "An invalid value was supplied for {Parameter}."
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 404,
                "error": "ERROR_UNABLE_TO_LOCATE_RESOURCE",
                "message": "Unable to locate a resource associated with the shortCodeId, phoneListId, and transactionalMessageId supplied."
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 401,
                "error": "ERROR_UNAUTHORIZED",
                "message": "Authorization was denied for this request."
              }
            }
          }
        },
        "security": [
          {
            "OAuth 2": []
          }
        ],
        "x-code-samples": [
          {
            "lang": "C#",
            "source": "var client = new HttpClient();\r\n\r\nclient.BaseAddress = new Uri(\"/\");\nclient.DefaultRequestHeaders.Add(\"Authorization\", \"Bearer \" + token);\r\n\r\nvar response = await client.GetAsync(\"v1/ShortCode/{shortCodeId}/PhoneList/{phoneListId}/TransactionalMessage/{transactionalMessageId}\");\n"
          },
          {
            "lang": "PHP",
            "source": "$client = new \\GuzzleHttp\\Client([\r\n\t'base_uri' => '/'\n]);\r\n\r\n$res = $client->request('GET', 'v1/ShortCode/{shortCodeId}/PhoneList/{phoneListId}/TransactionalMessage/{transactionalMessageId}',  [\r\n\t'headers' => ['Authorization' => 'Bearer ' . $accessToken]\r\n]);\n"
          }
        ]
      }
    },
    "/v1/ShortCode/{ShortCodeId}/PhoneList/{phoneListId}/TransactionalMessage/{transactionalMessageId}/Message": {
      "post": {
        "tags": [
          "TransactionalMessage"
        ],
        "summary": "Send Transactional Message",
        "description": "Send a single Transactional SMS Message for an SMS List by Id.",
        "operationId": "TransactionalMessage_PostTransactionalMessageSend",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "phoneListId",
            "in": "path",
            "description": "Identifier used to specify the SMS List that the message belongs to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "transactionalMessageId",
            "in": "path",
            "description": "Identifier used to specify the Tranactional SMS Message.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "contactResource",
            "in": "body",
            "description": "Contact object with necessary Transactional message information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransactionalMessageContact"
            }
          },
          {
            "name": "ShortCodeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 400,
                "error": "ERROR_INVALID_PARAMETER",
                "message": "An invalid value was supplied for {Parameter}."
              }
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResourceCreated"
            },
            "examples": {
              "application/json": {
                "status": 201,
                "resourceId": "{ResourceId}"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 401,
                "error": "ERROR_UNAUTHORIZED",
                "message": "Authorization was denied for this request."
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "status": 404,
                "error": "ERROR_UNABLE_TO_LOCATE_RESOURCE",
                "message": "Unable to locate a resource associated with the phoneListId, transactionalMessageId, and ShortCodeId supplied."
              }
            }
          }
        },
        "security": [
          {
            "OAuth 2": []
          }
        ],
        "x-code-samples": [
          {
            "lang": "C#",
            "source": "var client = new HttpClient();\r\n\r\nclient.BaseAddress = new Uri(\"/\");\nclient.DefaultRequestHeaders.Add(\"Authorization\", \"Bearer \" + token);\r\n\r\nvar response = await client.PostAsJsonAsync(\"v1/ShortCode/{ShortCodeId}/PhoneList/{phoneListId}/TransactionalMessage/{transactionalMessageId}/Message\", new\n{\r\n   PhoneNumber = null,\r\n   MessageContent = null\r\n});\n"
          },
          {
            "lang": "PHP",
            "source": "$client = new \\GuzzleHttp\\Client([\r\n\t'base_uri' => '/'\n]);\r\n\r\n$res = $client->request('POST', 'v1/ShortCode/{ShortCodeId}/PhoneList/{phoneListId}/TransactionalMessage/{transactionalMessageId}/Message',  [\r\n\t'headers' => ['Authorization' => 'Bearer ' . $accessToken],\r\n\t'body' => $jsonBody\r\n]);\n"
          }
        ]
      }
    }
  },
  "definitions": {
    "BroadcastMessage": {
      "description": "A Broadcast Message resource.",
      "required": [
        "phoneListId",
        "messageContent",
        "messageTitle"
      ],
      "type": "object",
      "properties": {
        "phoneListId": {
          "format": "int32",
          "description": "Identifier for an SMS List.",
          "type": "integer"
        },
        "messageContent": {
          "description": "Content of the SMS broadcast message.",
          "type": "string"
        },
        "messageTitle": {
          "description": "The name of the SMS broadcast message, used for reporting purposes.",
          "maxLength": 50,
          "minLength": 1,
          "type": "string"
        },
        "segmentationFieldId": {
          "description": "The identifier of a custom checkbox field to use for filtering. The message will only be sent to recipients with this field checked.",
          "type": "string"
        }
      }
    },
    "ResourceCreated": {
      "type": "object",
      "properties": {
        "status": {
          "format": "int32",
          "description": "HTTP status code.",
          "type": "integer"
        },
        "resourceId": {
          "description": "An identifier used to locate a resource.",
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "status": {
          "format": "int32",
          "description": "HTTP status code.",
          "type": "integer"
        },
        "error": {
          "description": "Error code indicating what error has occured.",
          "type": "string"
        },
        "message": {
          "description": "Message describing the status and the error that occurred.",
          "type": "string"
        }
      }
    },
    "CollectionPaged[SMSContact]": {
      "type": "object",
      "properties": {
        "status": {
          "format": "int32",
          "description": "HTTP status code.",
          "type": "integer"
        },
        "nextPageCursor": {
          "description": "URI of the next page of data.",
          "type": "string"
        },
        "data": {
          "description": "Collection of data that exists on this paged view.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SMSContact"
          }
        }
      }
    },
    "SMSContact": {
      "type": "object",
      "properties": {
        "phoneNumber": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "birthday": {
          "format": "date-time",
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "optedOut": {
          "type": "boolean"
        },
        "segmentationFieldValues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SMSPhoneContactAttribute"
          }
        }
      }
    },
    "SMSPhoneContactAttribute": {
      "type": "object",
      "properties": {
        "segmentationFieldId": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Collection[SMSContact]": {
      "type": "object",
      "properties": {
        "status": {
          "format": "int32",
          "description": "HTTP status code.",
          "type": "integer"
        },
        "data": {
          "description": "Collection of return data from the given call.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SMSContact"
          }
        }
      }
    },
    "Resource[SMSContactSubscriptionDetails]": {
      "type": "object",
      "properties": {
        "status": {
          "format": "int32",
          "description": "HTTP status code.",
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/SMSContactSubscriptionDetails",
          "description": "Return data."
        }
      }
    },
    "SMSContactSubscriptionDetails": {
      "type": "object",
      "properties": {
        "subscribeDate": {
          "format": "date-time",
          "description": "Subscription date of an SMS Contact.",
          "type": "string"
        },
        "unsubscribeDate": {
          "format": "date-time",
          "description": "Date of opt-out from an SMS short code.",
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "birthday": {
          "format": "date-time",
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "optedOut": {
          "type": "boolean"
        },
        "segmentationFieldValues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SMSPhoneContactAttribute"
          }
        }
      }
    },
    "ResourceUpdated": {
      "type": "object",
      "properties": {
        "status": {
          "format": "int32",
          "description": "HTTP status code.",
          "type": "integer"
        },
        "resourceId": {
          "description": "An identifier used to locate the updated resource.",
          "type": "string"
        }
      }
    },
    "CollectionPaged[ContactListSubscription]": {
      "type": "object",
      "properties": {
        "status": {
          "format": "int32",
          "description": "HTTP status code.",
          "type": "integer"
        },
        "nextPageCursor": {
          "description": "URI of the next page of data.",
          "type": "string"
        },
        "data": {
          "description": "Collection of data that exists on this paged view.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactListSubscription"
          }
        }
      }
    },
    "ContactListSubscription": {
      "description": "A Contact List Subscription Resource.",
      "type": "object",
      "properties": {
        "phoneListId": {
          "format": "int32",
          "description": "Identifier for a Phone List.",
          "type": "integer"
        },
        "subscriptionState": {
          "description": "The State of a Contact's Subscription.",
          "type": "string"
        },
        "subscribeDate": {
          "format": "date-time",
          "description": "The Date a Contact Subscribed to a List.",
          "type": "string"
        }
      }
    },
    "Collection[ContactListSubscription]": {
      "type": "object",
      "properties": {
        "status": {
          "format": "int32",
          "description": "HTTP status code.",
          "type": "integer"
        },
        "data": {
          "description": "Collection of return data from the given call.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactListSubscription"
          }
        }
      }
    },
    "ResourceDeleted": {
      "type": "object",
      "properties": {
        "status": {
          "format": "int32",
          "description": "HTTP status code.",
          "type": "integer"
        }
      }
    },
    "CollectionPaged[PhoneList]": {
      "type": "object",
      "properties": {
        "status": {
          "format": "int32",
          "description": "HTTP status code.",
          "type": "integer"
        },
        "nextPageCursor": {
          "description": "URI of the next page of data.",
          "type": "string"
        },
        "data": {
          "description": "Collection of data that exists on this paged view.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PhoneList"
          }
        }
      }
    },
    "PhoneList": {
      "description": "SMS Phone List Resource.",
      "type": "object",
      "properties": {
        "phoneListId": {
          "format": "int32",
          "description": "Identifier for an SMS Phone List.",
          "type": "integer"
        },
        "phoneListName": {
          "description": "Name of SMS Phone List.",
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "description": "Create Date of SMS Phone List.",
          "type": "string"
        },
        "status": {
          "description": "Status of SMS Phone List.",
          "type": "string"
        },
        "smsListType": {
          "description": "Type of SMS Phone List.",
          "type": "string"
        },
        "messageLimit": {
          "format": "int32",
          "description": "DEPRECATED as of May 2021.",
          "type": "integer"
        },
        "messageLimitTimeFrame": {
          "description": "DEPRECATED as of May 2021.",
          "type": "string"
        },
        "requireDoubleOptIn": {
          "description": "SMS Phone List Requires Double Opt In.",
          "type": "boolean"
        }
      }
    },
    "Collection[PhoneList]": {
      "type": "object",
      "properties": {
        "status": {
          "format": "int32",
          "description": "HTTP status code.",
          "type": "integer"
        },
        "data": {
          "description": "Collection of return data from the given call.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PhoneList"
          }
        }
      }
    },
    "Resource[PhoneAttribute]": {
      "type": "object",
      "properties": {
        "status": {
          "format": "int32",
          "description": "HTTP status code.",
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/PhoneAttribute",
          "description": "Return data."
        }
      }
    },
    "PhoneAttribute": {
      "description": "A Profile Field resource.",
      "type": "object",
      "properties": {
        "segmentationFieldId": {
          "format": "int32",
          "description": "Identifier of the profile field.",
          "type": "integer"
        },
        "segmentationFieldName": {
          "description": "Name of the profile field.",
          "type": "string"
        },
        "dataType": {
          "description": "Data type of the profile field.  Allowed values are `Text`, `Number`, `Checkbox`, and `Date`.",
          "type": "string"
        },
        "maxLength": {
          "format": "int32",
          "description": "The maximum character count of the data that can be stored in the profile field.",
          "type": "integer"
        },
        "statusFlag": {
          "description": "Identifier of the status of the profile field.",
          "type": "string"
        }
      }
    },
    "CollectionPaged[PhoneAttribute]": {
      "type": "object",
      "properties": {
        "status": {
          "format": "int32",
          "description": "HTTP status code.",
          "type": "integer"
        },
        "nextPageCursor": {
          "description": "URI of the next page of data.",
          "type": "string"
        },
        "data": {
          "description": "Collection of data that exists on this paged view.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PhoneAttribute"
          }
        }
      }
    },
    "Collection[PhoneAttribute]": {
      "type": "object",
      "properties": {
        "status": {
          "format": "int32",
          "description": "HTTP status code.",
          "type": "integer"
        },
        "data": {
          "description": "Collection of return data from the given call.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PhoneAttribute"
          }
        }
      }
    },
    "Collection[ShortCode]": {
      "type": "object",
      "properties": {
        "status": {
          "format": "int32",
          "description": "HTTP status code.",
          "type": "integer"
        },
        "data": {
          "description": "Collection of return data from the given call.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShortCode"
          }
        }
      }
    },
    "ShortCode": {
      "description": "SMS Short Code Resource.",
      "type": "object",
      "properties": {
        "shortCodeId": {
          "format": "int32",
          "description": "Identifier used to locate short code resource.",
          "type": "integer"
        },
        "code": {
          "description": "SMS Short Code.",
          "type": "string"
        },
        "country": {
          "description": "ISO 3166-1 Alpha-2 code of the country associated with shortcode.",
          "type": "string"
        },
        "merchantName": {
          "description": "Name of merchant associated with short code.",
          "type": "string"
        },
        "emailListId": {
          "format": "int32",
          "description": "Identifier of email list associated with shortcode.",
          "type": "integer"
        },
        "emailListName": {
          "description": "Name of email list associated with shortcode.",
          "type": "string"
        },
        "externalEventId": {
          "format": "int32",
          "description": "Identifier of external event associated with shortcode.",
          "type": "integer"
        },
        "externalEventName": {
          "description": "Name of external event associated with shortcode.",
          "type": "string"
        },
        "phoneNumberSegmentationFieldGroupId": {
          "format": "int32",
          "description": "Email list attribute id to store a contact's phone number.",
          "type": "integer"
        },
        "phoneNumberSegmentationFieldGroupName": {
          "description": "Email list attribute name to store a contact's phone number.",
          "type": "string"
        },
        "phoneNumberSegmentationFieldId": {
          "format": "int32",
          "description": "Email list attribute group id to store a contact's phone number.",
          "type": "integer"
        },
        "phoneNumberSegmentationFieldName": {
          "description": "Email list attribute group name to store a contact's phone number.",
          "type": "string"
        },
        "acquisitionSourceSegmentationFieldGroupId": {
          "format": "int32",
          "description": "Email list attribute group id to store a contact's acquisition source.",
          "type": "integer"
        },
        "acquisitionSourceSegmentationFieldGroupName": {
          "description": "Email list attribute group name to store a contact's acquisition source.",
          "type": "string"
        },
        "acquisitionSourceSegmentationFieldId": {
          "format": "int32",
          "description": "Email list attribute id to store a contact's acquisition source.",
          "type": "integer"
        },
        "acquisitionSourceSegmentationFieldName": {
          "description": "Email list attribute name to store a contact's acquisition source.",
          "type": "string"
        }
      }
    },
    "Resource[ShortCode]": {
      "type": "object",
      "properties": {
        "status": {
          "format": "int32",
          "description": "HTTP status code.",
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/ShortCode",
          "description": "Return data."
        }
      }
    },
    "Collection[TransactionalMessage]": {
      "type": "object",
      "properties": {
        "status": {
          "format": "int32",
          "description": "HTTP status code.",
          "type": "integer"
        },
        "data": {
          "description": "Collection of return data from the given call.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionalMessage"
          }
        }
      }
    },
    "TransactionalMessage": {
      "description": "A Transactional Message resource.",
      "type": "object",
      "properties": {
        "transactionalMessageId": {
          "format": "int32",
          "description": "Identifier used to locate a transactional message.",
          "type": "integer"
        },
        "transactionalMessageName": {
          "description": "Name given to a transactional message.",
          "type": "string"
        },
        "transactionalMessageStatus": {
          "description": "Status of a transactional message.",
          "type": "string"
        }
      }
    },
    "TransactionalMessageContact": {
      "description": "A Transactional Message Contact resource.",
      "type": "object",
      "properties": {
        "phoneNumber": {
          "description": "Phone Number associated with a contact.",
          "type": "string"
        },
        "messageContent": {
          "description": "Content of SMS Message.",
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "OAuth2": {
      "type": "oauth2",
      "description": "Authentication is accomplished using OAuth 2.0. After successful authentication, your token should be included with every request using the _Bearer_ scheme; specifically, you should set your `Authorization` header value to `Bearer (Your token value)` in each request.\r\n\r\nYou may request a token by making a `POST` request to our token endpoint at `https://auth.listrak.com/OAuth2/Token`. The request should have a `Content-Type` of `x-www-form-urlencoded`, and the request body should include a `grant_type` of `client_credentials`, your `client_id`, and your `client_secret`. Here is an example of a valid request:\r\n\r\n```\r\nPOST /OAuth2/Token\r\nContent-Type: application/x-www-form-urlencoded\r\n\r\ngrant_type: client_credentials\r\nclient_id: (Your client ID)\r\nclient_secret: (Your client secret)\r\n```\r\n\r\nFor your security and convenience, you may pause and unpause your API access on our _Integrations_ page. All requests will be rejected while your API access is paused, including requests to issue tokens.\r\n\n",
      "flow": "application",
      "tokenUrl": "https://auth.listrak.com/OAuth2/Token",
      "scopes": {}
    }
  },
  "tags": [
    {
      "name": "BroadcastMessage",
      "description": "A Message resource is used to send an SMS broadcast message to an SMS List, from a specified Short Code."
    },
    {
      "name": "Contact",
      "description": "A Contact resource is used to manage SMS Contacts."
    },
    {
      "name": "ContactListSubscription",
      "description": "A Contact List Subscription resource is used to retrieve and maintain SMS Subscriptions between SMS Lists."
    },
    {
      "name": "PhoneList",
      "description": "A Phone List resource is used to retrieve SMS List information for Short Codes."
    },
    {
      "name": "Segmentation",
      "description": "A Segmentation resource is used to retrieve profile fields."
    },
    {
      "name": "ShortCode",
      "description": "A Short code resource is used to retrieve Short Code information for a company."
    },
    {
      "name": "TransactionalMessage",
      "description": "A Campaign resource is used to retrieve SMS Transactional Lists and send SMS Transactional Messages."
    }
  ],
  "x-tagGroups": [
    {
      "name": "API Reference",
      "tags": [
        "BroadcastMessage",
        "Contact",
        "ContactListSubscription",
        "PhoneList",
        "Segmentation",
        "ShortCode",
        "TransactionalMessage"
      ]
    }
  ]
}